"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[34],{3683:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/files/Visual-Working-Board-8-16-25-53fda1c0b1370b6823494a9e25f7e2b1.pdf"},5171:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"design/meetings/Aug-16-Design-Meeting-Notes","title":"Design: Potion System, Player Progression","description":"### August 16, 2025","source":"@site/docs/design/meetings/2025-Aug-16-Design-Meeting-Notes.md","sourceDirName":"design/meetings","slug":"/design/meetings/Aug-16-Design-Meeting-Notes","permalink":"/wotr-docs/docs/design/meetings/Aug-16-Design-Meeting-Notes","draft":false,"unlisted":false,"editUrl":"https://github.com/Wanderers-Of-The-Rift/wotr-docs/edit/main/website/docs/design/meetings/2025-Aug-16-Design-Meeting-Notes.md","tags":[],"version":"current","sidebarPosition":2025,"frontMatter":{},"sidebar":"docs","previous":{"title":"Design: Classes, Skill Tree, Progression","permalink":"/wotr-docs/docs/design/meetings/Aug-23-Design-Meeting-Notes"},"next":{"title":"Design: Rune Tiering, Rift Refreshments, Divine Essences, and Player Progression","permalink":"/wotr-docs/docs/design/meetings/Aug-09-Design-Meeting-Notes"}}');var r=s(4848),t=s(8453);const l={},o="Design: Potion System, Player Progression",a={},d=[{value:"<em>August 16, 2025</em>",id:"august-16-2025",level:3},{value:"Visual Working Board PDF",id:"visual-working-board-pdf",level:2},{value:"Meeting Format",id:"meeting-format",level:2},{value:"Potion System Overhaul",id:"potion-system-overhaul",level:2},{value:"Core Purpose",id:"core-purpose",level:3},{value:"Proposed Features",id:"proposed-features",level:3},{value:"Crafting Enhancements",id:"crafting-enhancements",level:3},{value:"Rift Water Bottles &amp; Liquid Variants",id:"rift-water-bottles--liquid-variants",level:2},{value:"Essence System Integration",id:"essence-system-integration",level:2},{value:"Leveling &amp; Player Progression",id:"leveling--player-progression",level:2},{value:"Forum Highlights",id:"forum-highlights",level:3},{value:"Progression Systems",id:"progression-systems",level:3},{value:"Wanderer\u2019s Charm",id:"wanderers-charm",level:3},{value:"Rift Key Maker",id:"rift-key-maker",level:3},{value:"Additional Topics",id:"additional-topics",level:2},{value:"Mod Architecture &amp; Project Organization",id:"mod-architecture--project-organization",level:3},{value:"Combat Crafting &amp; Item Usage",id:"combat-crafting--item-usage",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"design-potion-system-player-progression",children:"Design: Potion System, Player Progression"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.h3,{id:"august-16-2025",children:(0,r.jsx)(n.em,{children:"August 16, 2025"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"@rachaelrose1212"}),"\n",(0,r.jsx)(n.li,{children:"@Cjzech"}),"\n",(0,r.jsx)(n.li,{children:"@Galactic_15"}),"\n",(0,r.jsx)(n.li,{children:"@jyu"}),"\n",(0,r.jsx)(n.li,{children:"@KiaraJclyn410"}),"\n",(0,r.jsx)(n.li,{children:"@maloki"}),"\n",(0,r.jsx)(n.li,{children:"@Rev"}),"\n",(0,r.jsx)(n.li,{children:"@Sp3cialK"}),"\n",(0,r.jsx)(n.li,{children:"@WarrenGore"}),"\n",(0,r.jsx)(n.li,{children:"@ybhappy"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"visual-working-board-pdf",children:(0,r.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(3683).A+"",children:"Visual Working Board PDF"})}),"\n",(0,r.jsx)(n.h2,{id:"meeting-format",children:"Meeting Format"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Meeting included:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Idea sharing (15 minutes)"}),"\n",(0,r.jsx)(n.li,{children:"Weekly focus topic (30 minutes)"}),"\n",(0,r.jsx)(n.li,{children:"Review of existing and in-progress ideas (15 Miuntes)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"potion-system-overhaul",children:"Potion System Overhaul"}),"\n",(0,r.jsx)(n.h3,{id:"core-purpose",children:"Core Purpose"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Vanilla and Vault Hunters potions feel ",(0,r.jsx)(n.strong,{children:"underused"})," and ",(0,r.jsx)(n.strong,{children:"uninspired"})]}),"\n",(0,r.jsxs)(n.li,{children:["Desire to make potions cool, strategic, and ",(0,r.jsx)(n.strong,{children:"part of core gameplay"})," again"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"proposed-features",children:"Proposed Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-effect potions"})," with a ",(0,r.jsx)(n.strong,{children:"point buy balancing system"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Stronger effects must be balanced with drawbacks"}),"\n",(0,r.jsxs)(n.li,{children:["Inspired by ",(0,r.jsx)(n.em,{children:"The Witcher"})," and ",(0,r.jsx)(n.em,{children:"Potion Craft"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"New potion mechanics"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Potions that ",(0,r.jsx)(n.strong,{children:"coat weapons"})," with temporary effects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rift-exclusive ingredients"})," gathered during runs"]}),"\n",(0,r.jsx)(n.li,{children:"Brewing influenced by ingredient prep (powdering, fermenting, cooking)"}),"\n",(0,r.jsx)(n.li,{children:"Alternative base liquids (e.g., Rift water types)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Larger potion bottles"})," with multiple sips"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"crafting-enhancements",children:"Crafting Enhancements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return potion brewing to cauldrons"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Could use a ",(0,r.jsx)(n.strong,{children:"multi-block structure"})," or recipe system"]}),"\n",(0,r.jsx)(n.li,{children:"Suggestion: brewing stand must be adjacent to a cauldron to enable advanced functionality"}),"\n",(0,r.jsxs)(n.li,{children:["Inspired by ",(0,r.jsx)(n.em,{children:"Terraria"}),"-style proximity-based crafting"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"rift-water-bottles--liquid-variants",children:"Rift Water Bottles & Liquid Variants"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Different Rift biomes could offer unique water sources"}),"\n",(0,r.jsx)(n.li,{children:'These liquids affect potion base stats (e.g., "+1 base potency")'}),"\n",(0,r.jsx)(n.li,{children:"Encourages exploration and biome variety to access new potion strategies"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"essence-system-integration",children:"Essence System Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Suggestion to merge ",(0,r.jsx)(n.strong,{children:"Essence system"})," with potion crafting"]}),"\n",(0,r.jsxs)(n.li,{children:["Convert materials into ",(0,r.jsx)(n.strong,{children:"essences"})," for use, storage, or recombination"]}),"\n",(0,r.jsxs)(n.li,{children:["Concerns raised about clashing with other essence-heavy mods (",(0,r.jsx)(n.em,{children:"Mystical Agriculture"}),", ",(0,r.jsx)(n.em,{children:"Botania"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Recommended focus: ",(0,r.jsx)(n.strong,{children:"custom implementation"})," over kitchen-sink integrations"]}),"\n",(0,r.jsx)(n.li,{children:"Add-ons can be used to tweak existing mods for consistency."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"leveling--player-progression",children:"Leveling & Player Progression"}),"\n",(0,r.jsx)(n.h3,{id:"forum-highlights",children:"Forum Highlights"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.strong,{children:"forum post on player stats"})," 150+ responses"]}),"\n",(0,r.jsx)(n.li,{children:"Much of the feedback ties into player progression, separation, and identity"}),"\n",(0,r.jsx)(n.li,{children:"Spreadsheet/graph in development to visualize progression systems"}),"\n",(0,r.jsx)(n.li,{children:"Guild progression mock-up in chat includes unlock details"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"progression-systems",children:"Progression Systems"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Separate ",(0,r.jsx)(n.strong,{children:"modded gear"})," (base gear) from vanilla gear"]}),"\n",(0,r.jsxs)(n.li,{children:["Use the ",(0,r.jsx)(n.strong,{children:"XP bar or custom systems"})," for level tracking"]}),"\n",(0,r.jsxs)(n.li,{children:["Suggested ",(0,r.jsx)(n.strong,{children:"gates"})," tied to bosses or Rift difficulty to regulate progression"]}),"\n",(0,r.jsxs)(n.li,{children:["Inspired by ",(0,r.jsx)(n.em,{children:"Vault Hunters"}),"\u2019 single gate mechanic leveling up"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"wanderers-charm",children:"Wanderer\u2019s Charm"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Proposed upgrades to enhance utility and unlock more escape/return options as the player advances"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rift-key-maker",children:"Rift Key Maker"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Discussion on upgrading the key maker for higher Rift tiers"}),"\n",(0,r.jsxs)(n.li,{children:["Alternative idea: ",(0,r.jsx)(n.strong,{children:"remove the key maker entirely"})," and bake its logic into the Rift portal itself"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"additional-topics",children:"Additional Topics"}),"\n",(0,r.jsx)(n.h3,{id:"mod-architecture--project-organization",children:"Mod Architecture & Project Organization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Once a pitch passes, ",(0,r.jsx)(n.strong,{children:"ownership becomes unclear"})]}),"\n",(0,r.jsx)(n.li,{children:"Concern: no clear team or leader picks up implementation afterward"}),"\n",(0,r.jsx)(n.li,{children:"Coordination between teams (Art, Lore, Development) is currently lacking\nSuggested:"}),"\n",(0,r.jsxs)(n.li,{children:["Break feature development into ",(0,r.jsx)(n.strong,{children:"assignable tasks"})]}),"\n",(0,r.jsxs)(n.li,{children:["Use big meetings to surface ",(0,r.jsx)(n.strong,{children:"cross-team topics"})]}),"\n",(0,r.jsxs)(n.li,{children:["Example: Hub World needs to be discussed at the ",(0,r.jsx)(n.strong,{children:"Aug 30th large meeting"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"combat-crafting--item-usage",children:"Combat Crafting & Item Usage"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Reintroduce ",(0,r.jsx)(n.strong,{children:"vanilla+ combat tools"}),", like crafted arrows or throwable items"]}),"\n",(0,r.jsxs)(n.li,{children:["Designed for ",(0,r.jsx)(n.strong,{children:"impactful but consumable"})," use during Rifts"]}),"\n",(0,r.jsxs)(n.li,{children:["Desire to ",(0,r.jsx)(n.strong,{children:"retain vanilla gear viability"})," throughout the game"]}),"\n",(0,r.jsx)(n.li,{children:"XP-based progression proposed in place of enchantments"}),"\n",(0,r.jsxs)(n.li,{children:["Armor trims could be used to ",(0,r.jsx)(n.strong,{children:"add modular buffs"}),", referencing the ",(0,r.jsx)(n.em,{children:"Prominence"})," mod"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Next Actions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Next week\u2019s meeting will continue at a similar time"}),"\n",(0,r.jsx)(n.li,{children:"Next focus: Loot"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);