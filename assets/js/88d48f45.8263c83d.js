"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4888],{1109:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"code/datapack/format/quests","title":"Quest Data","description":"Quests are tasks the player can take that have goals that must be met and rewards that they provide. A quest can be a specific set of goals and rewards, or can have randomisation in what is required or rewarded.","source":"@site/docs/code/datapack/format/quests.md","sourceDirName":"code/datapack/format","slug":"/code/datapack/format/quests","permalink":"/wotr-docs/docs/code/datapack/format/quests","draft":false,"unlisted":false,"editUrl":"https://github.com/Wanderers-Of-The-Rift/wotr-docs/edit/main/website/docs/code/datapack/format/quests.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Modifiers","permalink":"/wotr-docs/docs/code/datapack/format/modifiers"},"next":{"title":"Runegems","permalink":"/wotr-docs/docs/code/datapack/format/runegems"}}');var r=t(4848),o=t(8453);const l={},s="Quest Data",d={},c=[{value:"Location",id:"location",level:2},{value:"Format",id:"format",level:2},{value:"Localisation",id:"localisation",level:2},{value:"Goals",id:"goals",level:2},{value:"Give Item",id:"give-item",level:3},{value:"Fixed Give Item",id:"fixed-give-item",level:3},{value:"Complete Rift",id:"complete-rift",level:3},{value:"Fixed Complete Rift",id:"fixed-complete-rift",level:3},{value:"Fixed Kill Mob",id:"fixed-kill-mob",level:3},{value:"Pool",id:"pool",level:3},{value:"Rewards",id:"rewards",level:2},{value:"Item Reward",id:"item-reward",level:3},{value:"Loot Table Reward",id:"loot-table-reward",level:3},{value:"Overall Example",id:"overall-example",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"quest-data",children:"Quest Data"})}),"\n",(0,r.jsx)(n.p,{children:"Quests are tasks the player can take that have goals that must be met and rewards that they provide. A quest can be a specific set of goals and rewards, or can have randomisation in what is required or rewarded."}),"\n",(0,r.jsx)(n.h2,{id:"location",children:"Location"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"data/wotr/wotr/quest"})," Take note of the second wotr."]}),"\n",(0,r.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"goals"}),": A list of goals that the quest requires to be completed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rewards"}),": A list of rewards that the quest will provide when completed."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"localisation",children:"Localisation"}),"\n",(0,r.jsx)(n.p,{children:"Each quest also has the following text that should be defined:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"quest.<mod id>.<quest id>.title"})," - A title for the quest, shown in title blocks and on buttons."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"quest.<mod id>.<quest id>.description"})," - A longer description for the quest, can be NPC speech or lore text."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"goals",children:"Goals"}),"\n",(0,r.jsx)(n.p,{children:"These are the current available goals."}),"\n",(0,r.jsx)(n.h3,{id:"give-item",children:"Give Item"}),"\n",(0,r.jsx)(n.p,{children:"Give Item goal requires the player to hand in a number of either a specific item or a type of item defined by an item tag."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Must be ",(0,r.jsx)(n.code,{children:"wotr:give_item"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"item"}),": The item(s). Can be either an item id, an item tag (prefixed with #) or an array of ids."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"count"}),": A number provider as described ",(0,r.jsx)(n.a,{href:"https://minecraft.wiki/w/Loot_table#Number_provider",children:"in the wiki"})," to provide the range for the number of items to be handed in."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "wotr:give_item",\n  "item": "minecraft:gold_ingot",\n  "count": {\n    "type": "minecraft:uniform",\n    "min": 5,\n    "max": 8\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"fixed-give-item",children:"Fixed Give Item"}),"\n",(0,r.jsx)(n.p,{children:"A variant of Give Item goal where the count is fixed."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Must be ",(0,r.jsx)(n.code,{children:"wotr:fixed_give_item"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"item"}),": The item(s). Can be either an item id, an item tag (prefixed with #) or an array of ids."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"count"}),": Integer. The number of items that must be handed in."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "wotr:give_item",\n  "item": "minecraft:gold_ingot",\n  "count": 4\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"complete-rift",children:"Complete Rift"}),"\n",(0,r.jsx)(n.p,{children:"The Complete Rift goal requires the player to undertake a rift. Requirements can be specified on the type of rift and the level of completion required."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Must be ",(0,r.jsx)(n.code,{children:"wotr:complete_rift"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"count"}),": A number provider as described ",(0,r.jsx)(n.a,{href:"https://minecraft.wiki/w/Loot_table#Number_provider",children:"in the wiki"})," to specify the range for the number of rifts that must be completed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"completion_level"}),": One of ",(0,r.jsx)(n.code,{children:"attempt"}),", ",(0,r.jsx)(n.code,{children:"survive"}),", ",(0,r.jsx)(n.code,{children:"complete"})," - the degree of success required for the rift completion to count towards the quest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tier"}),": Optional, Integer. The minimum tier the rift must be. If not specified there will be no tier requirement."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"themes"}),": Optional. A list of theme ids of which one will be randomly selected to be required by the quest. If not specified, no theme will be required."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"objectives"}),": Optional. A list of objective ids of which one will be randomly selected to be required by the quest. If not specified, no theme will be required."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "wotr:complete_rift",\n  "count" : {\n    "type": "minecraft:uniform",\n    "min": 1,\n    "max": 3\n  },\n  "tier" : {\n    "type": "minecraft:uniform",\n    "min": 1,\n    "max": 3\n  },\n  "themes" : [\n    "wotr:cave",\n    "wotr:forest",\n    "wotr:desert",\n    "wotr:swamp"\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"fixed-complete-rift",children:"Fixed Complete Rift"}),"\n",(0,r.jsx)(n.p,{children:"A variant of the Complete Rift goal with no randomisation."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Must be ",(0,r.jsx)(n.code,{children:"wotr:fixed_complete_rift"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"count"}),": Number. How many rifts need to be completed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"completion_level"}),": One of ",(0,r.jsx)(n.code,{children:"attempt"}),", ",(0,r.jsx)(n.code,{children:"survive"}),", ",(0,r.jsx)(n.code,{children:"complete"})," - the degree of success required for the rift completion to count towards the quest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rift_type"}),": Optional. Specifies restrictions on rift type.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tier"}),": Optional, Integer. Min tier required."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"theme"}),": Optional. Id of the theme required."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"objective"}),": Optional. Id of the objective required."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "wotr:fixed_complete_rift",\n  "count" : 2,\n  "completion_level" : "complete",\n  "rift_type" : {\n    "tier": 5,\n    "theme": "wotr:cave",\n    "objective": "wotr:kill"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"fixed-kill-mob",children:"Fixed Kill Mob"}),"\n",(0,r.jsx)(n.p,{children:"The Fixed Kill Mob goal requires a number of mobs of a specific type or a range of types to be killed by the player."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Must be ",(0,r.jsx)(n.code,{children:"wotr:fixed_kill_mob"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mob"}),": The type of mobs required to be killed. Either an Entity Type id, an Entity Type tag, or a list of Entity Type ids."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mob_label"}),": String. The language id for displaying the mob type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"count"}),": Integer. The number of"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"pool",children:"Pool"}),"\n",(0,r.jsx)(n.p,{children:"The Pool goal picks a random goal out of a list of goals."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Must be ",(0,r.jsx)(n.code,{children:"wotr:pool"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"entries"}),": A list of goals"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "wotr:pool",\n  "entries": [\n    {\n      "type" : "wotr:fixed_give_item",\n      "item" : "wotr:skill_thread",\n      "count" : 5\n    },\n    {\n      "type" : "wotr:fixed_give_item",\n      "item" : "minecraft:gold_ingot",\n      "count" : 4\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"rewards",children:"Rewards"}),"\n",(0,r.jsx)(n.p,{children:"These are the currently available rewards."}),"\n",(0,r.jsx)(n.h3,{id:"item-reward",children:"Item Reward"}),"\n",(0,r.jsx)(n.p,{children:"A reward that provides a specific item."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Must be ",(0,r.jsx)(n.code,{children:"wotr:item"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"item"}),": The item, in ",(0,r.jsx)(n.a,{href:"https://minecraft.wiki/w/Data_component_format",children:"item format"}),". This includes id, count, and any components."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "wotr:item",\n  "item": {\n    "components": {\n      "wotr:ability": "wotr:fireball"\n    },\n    "count": 1,\n    "id": "wotr:ability_holder"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"loot-table-reward",children:"Loot Table Reward"}),"\n",(0,r.jsx)(n.p,{children:"A reward that generates its contents from a loot table. All generated items will be included in the reward, with stacks combined where possible."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Must be ",(0,r.jsx)(n.code,{children:"wotr:loot_table"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"loot_table"}),": The id of the loot table to generate the reward from."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "wotr:loot_table",\n  "loot_table" : "wotr:chests/wooden"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"overall-example",children:"Overall Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "goals": [\n    {\n      "type": "wotr:fixed_give_item",\n      "item": "minecraft:gold_ingot",\n      "count": 4\n    },\n    {\n      "type": "wotr:pool",\n      "entries": [\n        {\n          "type" : "wotr:give_item",\n          "item" : "wotr:skill_thread",\n          "count" : {\n            "type": "minecraft:uniform",\n            "min": 5,\n            "max": 8\n          }\n        },\n        {\n          "type" : "wotr:give_item",\n          "item" : "minecraft:gold_ingot",\n          "count" : {\n            "type": "minecraft:uniform",\n            "min": 24,\n            "max": 32\n          }\n        },\n        {\n          "type" : "wotr:give_item",\n          "item" : "minecraft:iron_ingot",\n          "count" : {\n            "type": "minecraft:uniform",\n            "min": 32,\n            "max": 48\n          }\n        },\n        {\n          "type" : "wotr:give_item",\n          "item" : "minecraft:copper_ingot",\n          "count" : {\n            "type": "minecraft:uniform",\n            "min": 48,\n            "max": 64\n          }\n        }\n      ]\n    }\n  ],\n  "rewards": [\n    {\n      "type": "wotr:item",\n      "item": {\n        "components": {\n          "wotr:ability": "wotr:fireball"\n        },\n        "count": 1,\n        "id": "wotr:ability_holder"\n      }\n    },\n    {\n      "type": "wotr:loot_table",\n      "loot_table" : "wotr:chests/wooden"\n    }\n  ]\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var i=t(6540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);